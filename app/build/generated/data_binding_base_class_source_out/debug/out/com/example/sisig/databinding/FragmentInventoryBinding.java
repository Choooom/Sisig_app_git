// Generated by view binder compiler. Do not edit!
package com.example.sisig.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sisig.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInventoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout displayAddedStock;

  @NonNull
  public final LinearLayout displayAlertStock;

  @NonNull
  public final TextView inStockTitle;

  @NonNull
  public final Button instockButton;

  @NonNull
  public final Button setAlertButton;

  @NonNull
  public final TextView stockAlertTitle;

  private FragmentInventoryBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout displayAddedStock, @NonNull LinearLayout displayAlertStock,
      @NonNull TextView inStockTitle, @NonNull Button instockButton, @NonNull Button setAlertButton,
      @NonNull TextView stockAlertTitle) {
    this.rootView = rootView;
    this.displayAddedStock = displayAddedStock;
    this.displayAlertStock = displayAlertStock;
    this.inStockTitle = inStockTitle;
    this.instockButton = instockButton;
    this.setAlertButton = setAlertButton;
    this.stockAlertTitle = stockAlertTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInventoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInventoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_inventory, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInventoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.display_added_stock;
      LinearLayout displayAddedStock = ViewBindings.findChildViewById(rootView, id);
      if (displayAddedStock == null) {
        break missingId;
      }

      id = R.id.display_alert_stock;
      LinearLayout displayAlertStock = ViewBindings.findChildViewById(rootView, id);
      if (displayAlertStock == null) {
        break missingId;
      }

      id = R.id.in_stock_title;
      TextView inStockTitle = ViewBindings.findChildViewById(rootView, id);
      if (inStockTitle == null) {
        break missingId;
      }

      id = R.id.instock_button;
      Button instockButton = ViewBindings.findChildViewById(rootView, id);
      if (instockButton == null) {
        break missingId;
      }

      id = R.id.set_alert_button;
      Button setAlertButton = ViewBindings.findChildViewById(rootView, id);
      if (setAlertButton == null) {
        break missingId;
      }

      id = R.id.stock_alert_title;
      TextView stockAlertTitle = ViewBindings.findChildViewById(rootView, id);
      if (stockAlertTitle == null) {
        break missingId;
      }

      return new FragmentInventoryBinding((LinearLayout) rootView, displayAddedStock,
          displayAlertStock, inStockTitle, instockButton, setAlertButton, stockAlertTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
