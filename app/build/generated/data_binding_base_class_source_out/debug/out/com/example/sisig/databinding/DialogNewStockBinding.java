// Generated by view binder compiler. Do not edit!
package com.example.sisig.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sisig.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogNewStockBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button cancelNewStock;

  @NonNull
  public final EditText categoryInput;

  @NonNull
  public final Button confirmNewStock;

  @NonNull
  public final EditText itemsInput;

  @NonNull
  public final EditText productNameInput;

  private DialogNewStockBinding(@NonNull LinearLayout rootView, @NonNull Button cancelNewStock,
      @NonNull EditText categoryInput, @NonNull Button confirmNewStock,
      @NonNull EditText itemsInput, @NonNull EditText productNameInput) {
    this.rootView = rootView;
    this.cancelNewStock = cancelNewStock;
    this.categoryInput = categoryInput;
    this.confirmNewStock = confirmNewStock;
    this.itemsInput = itemsInput;
    this.productNameInput = productNameInput;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogNewStockBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogNewStockBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_new_stock, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogNewStockBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel_new_stock;
      Button cancelNewStock = ViewBindings.findChildViewById(rootView, id);
      if (cancelNewStock == null) {
        break missingId;
      }

      id = R.id.category_input;
      EditText categoryInput = ViewBindings.findChildViewById(rootView, id);
      if (categoryInput == null) {
        break missingId;
      }

      id = R.id.confirm_new_stock;
      Button confirmNewStock = ViewBindings.findChildViewById(rootView, id);
      if (confirmNewStock == null) {
        break missingId;
      }

      id = R.id.items_input;
      EditText itemsInput = ViewBindings.findChildViewById(rootView, id);
      if (itemsInput == null) {
        break missingId;
      }

      id = R.id.product_name_input;
      EditText productNameInput = ViewBindings.findChildViewById(rootView, id);
      if (productNameInput == null) {
        break missingId;
      }

      return new DialogNewStockBinding((LinearLayout) rootView, cancelNewStock, categoryInput,
          confirmNewStock, itemsInput, productNameInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
