// Generated by view binder compiler. Do not edit!
package com.example.sisig.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sisig.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView avatarImage;

  @NonNull
  public final TextView changeAvatar;

  @NonNull
  public final Button deleteAccountButton;

  @NonNull
  public final EditText emailInput;

  @NonNull
  public final EditText preferredNameInput;

  @NonNull
  public final Button saveChangesButton;

  @NonNull
  public final EditText usernameInput;

  private FragmentSettingsBinding(@NonNull ScrollView rootView, @NonNull ImageView avatarImage,
      @NonNull TextView changeAvatar, @NonNull Button deleteAccountButton,
      @NonNull EditText emailInput, @NonNull EditText preferredNameInput,
      @NonNull Button saveChangesButton, @NonNull EditText usernameInput) {
    this.rootView = rootView;
    this.avatarImage = avatarImage;
    this.changeAvatar = changeAvatar;
    this.deleteAccountButton = deleteAccountButton;
    this.emailInput = emailInput;
    this.preferredNameInput = preferredNameInput;
    this.saveChangesButton = saveChangesButton;
    this.usernameInput = usernameInput;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avatarImage;
      ImageView avatarImage = ViewBindings.findChildViewById(rootView, id);
      if (avatarImage == null) {
        break missingId;
      }

      id = R.id.changeAvatar;
      TextView changeAvatar = ViewBindings.findChildViewById(rootView, id);
      if (changeAvatar == null) {
        break missingId;
      }

      id = R.id.deleteAccountButton;
      Button deleteAccountButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteAccountButton == null) {
        break missingId;
      }

      id = R.id.emailInput;
      EditText emailInput = ViewBindings.findChildViewById(rootView, id);
      if (emailInput == null) {
        break missingId;
      }

      id = R.id.preferredNameInput;
      EditText preferredNameInput = ViewBindings.findChildViewById(rootView, id);
      if (preferredNameInput == null) {
        break missingId;
      }

      id = R.id.saveChangesButton;
      Button saveChangesButton = ViewBindings.findChildViewById(rootView, id);
      if (saveChangesButton == null) {
        break missingId;
      }

      id = R.id.usernameInput;
      EditText usernameInput = ViewBindings.findChildViewById(rootView, id);
      if (usernameInput == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ScrollView) rootView, avatarImage, changeAvatar,
          deleteAccountButton, emailInput, preferredNameInput, saveChangesButton, usernameInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
