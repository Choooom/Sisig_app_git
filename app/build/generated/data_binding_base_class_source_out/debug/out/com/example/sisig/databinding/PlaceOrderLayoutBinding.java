// Generated by view binder compiler. Do not edit!
package com.example.sisig.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sisig.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PlaceOrderLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final Button confirmButton;

  @NonNull
  public final Button decreaseQuantity;

  @NonNull
  public final Button increaseQuantity;

  @NonNull
  public final TextView menuDescription;

  @NonNull
  public final LinearLayout menuDisplayLayout;

  @NonNull
  public final ImageView menuImage;

  @NonNull
  public final TextView menuName;

  @NonNull
  public final TextView menuPrice;

  @NonNull
  public final TextView menuServing;

  @NonNull
  public final TextView orderHeader;

  @NonNull
  public final TextView quantity;

  @NonNull
  public final TextView totalCost;

  @NonNull
  public final TextView totalCostLabel;

  private PlaceOrderLayoutBinding(@NonNull LinearLayout rootView, @NonNull Button cancelButton,
      @NonNull Button confirmButton, @NonNull Button decreaseQuantity,
      @NonNull Button increaseQuantity, @NonNull TextView menuDescription,
      @NonNull LinearLayout menuDisplayLayout, @NonNull ImageView menuImage,
      @NonNull TextView menuName, @NonNull TextView menuPrice, @NonNull TextView menuServing,
      @NonNull TextView orderHeader, @NonNull TextView quantity, @NonNull TextView totalCost,
      @NonNull TextView totalCostLabel) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.confirmButton = confirmButton;
    this.decreaseQuantity = decreaseQuantity;
    this.increaseQuantity = increaseQuantity;
    this.menuDescription = menuDescription;
    this.menuDisplayLayout = menuDisplayLayout;
    this.menuImage = menuImage;
    this.menuName = menuName;
    this.menuPrice = menuPrice;
    this.menuServing = menuServing;
    this.orderHeader = orderHeader;
    this.quantity = quantity;
    this.totalCost = totalCost;
    this.totalCostLabel = totalCostLabel;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PlaceOrderLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PlaceOrderLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.place_order_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PlaceOrderLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel_button;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.confirm_button;
      Button confirmButton = ViewBindings.findChildViewById(rootView, id);
      if (confirmButton == null) {
        break missingId;
      }

      id = R.id.decrease_quantity;
      Button decreaseQuantity = ViewBindings.findChildViewById(rootView, id);
      if (decreaseQuantity == null) {
        break missingId;
      }

      id = R.id.increase_quantity;
      Button increaseQuantity = ViewBindings.findChildViewById(rootView, id);
      if (increaseQuantity == null) {
        break missingId;
      }

      id = R.id.menu_description;
      TextView menuDescription = ViewBindings.findChildViewById(rootView, id);
      if (menuDescription == null) {
        break missingId;
      }

      id = R.id.menu_display_layout;
      LinearLayout menuDisplayLayout = ViewBindings.findChildViewById(rootView, id);
      if (menuDisplayLayout == null) {
        break missingId;
      }

      id = R.id.menu_image;
      ImageView menuImage = ViewBindings.findChildViewById(rootView, id);
      if (menuImage == null) {
        break missingId;
      }

      id = R.id.menu_name;
      TextView menuName = ViewBindings.findChildViewById(rootView, id);
      if (menuName == null) {
        break missingId;
      }

      id = R.id.menu_price;
      TextView menuPrice = ViewBindings.findChildViewById(rootView, id);
      if (menuPrice == null) {
        break missingId;
      }

      id = R.id.menu_serving;
      TextView menuServing = ViewBindings.findChildViewById(rootView, id);
      if (menuServing == null) {
        break missingId;
      }

      id = R.id.order_header;
      TextView orderHeader = ViewBindings.findChildViewById(rootView, id);
      if (orderHeader == null) {
        break missingId;
      }

      id = R.id.quantity;
      TextView quantity = ViewBindings.findChildViewById(rootView, id);
      if (quantity == null) {
        break missingId;
      }

      id = R.id.total_cost;
      TextView totalCost = ViewBindings.findChildViewById(rootView, id);
      if (totalCost == null) {
        break missingId;
      }

      id = R.id.total_cost_label;
      TextView totalCostLabel = ViewBindings.findChildViewById(rootView, id);
      if (totalCostLabel == null) {
        break missingId;
      }

      return new PlaceOrderLayoutBinding((LinearLayout) rootView, cancelButton, confirmButton,
          decreaseQuantity, increaseQuantity, menuDescription, menuDisplayLayout, menuImage,
          menuName, menuPrice, menuServing, orderHeader, quantity, totalCost, totalCostLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
