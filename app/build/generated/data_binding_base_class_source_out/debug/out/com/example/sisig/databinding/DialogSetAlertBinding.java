// Generated by view binder compiler. Do not edit!
package com.example.sisig.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sisig.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogSetAlertBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText alertAmtInput;

  @NonNull
  public final Button cancelSetAlert;

  @NonNull
  public final Button confirmSetAlert;

  @NonNull
  public final EditText itemsAlertInput;

  @NonNull
  public final EditText productNameAlertInput;

  private DialogSetAlertBinding(@NonNull LinearLayout rootView, @NonNull EditText alertAmtInput,
      @NonNull Button cancelSetAlert, @NonNull Button confirmSetAlert,
      @NonNull EditText itemsAlertInput, @NonNull EditText productNameAlertInput) {
    this.rootView = rootView;
    this.alertAmtInput = alertAmtInput;
    this.cancelSetAlert = cancelSetAlert;
    this.confirmSetAlert = confirmSetAlert;
    this.itemsAlertInput = itemsAlertInput;
    this.productNameAlertInput = productNameAlertInput;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSetAlertBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSetAlertBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_set_alert, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSetAlertBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alert_amt_input;
      EditText alertAmtInput = ViewBindings.findChildViewById(rootView, id);
      if (alertAmtInput == null) {
        break missingId;
      }

      id = R.id.cancel_set_alert;
      Button cancelSetAlert = ViewBindings.findChildViewById(rootView, id);
      if (cancelSetAlert == null) {
        break missingId;
      }

      id = R.id.confirm_set_alert;
      Button confirmSetAlert = ViewBindings.findChildViewById(rootView, id);
      if (confirmSetAlert == null) {
        break missingId;
      }

      id = R.id.items_alert_input;
      EditText itemsAlertInput = ViewBindings.findChildViewById(rootView, id);
      if (itemsAlertInput == null) {
        break missingId;
      }

      id = R.id.product_name_alert_input;
      EditText productNameAlertInput = ViewBindings.findChildViewById(rootView, id);
      if (productNameAlertInput == null) {
        break missingId;
      }

      return new DialogSetAlertBinding((LinearLayout) rootView, alertAmtInput, cancelSetAlert,
          confirmSetAlert, itemsAlertInput, productNameAlertInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
