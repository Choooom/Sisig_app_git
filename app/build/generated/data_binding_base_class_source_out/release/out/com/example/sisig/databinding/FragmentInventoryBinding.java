// Generated by view binder compiler. Do not edit!
package com.example.sisig.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sisig.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInventoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText alertAmtInput;

  @NonNull
  public final Button cancelNewStock;

  @NonNull
  public final Button cancelSetAlert;

  @NonNull
  public final EditText categoryInput;

  @NonNull
  public final Button confirmNewStock;

  @NonNull
  public final Button confirmSetAlert;

  @NonNull
  public final TextView inStockTitle;

  @NonNull
  public final Button instockButton;

  @NonNull
  public final EditText itemsAlertInput;

  @NonNull
  public final EditText itemsInput;

  @NonNull
  public final LinearLayout newStockDialog;

  @NonNull
  public final EditText productIdAlertInput;

  @NonNull
  public final EditText productIdInput;

  @NonNull
  public final EditText productNameAlertInput;

  @NonNull
  public final EditText productNameInput;

  @NonNull
  public final Button setAlertButton;

  @NonNull
  public final LinearLayout setAlertDialog;

  @NonNull
  public final TextView stockAlertTitle;

  private FragmentInventoryBinding(@NonNull LinearLayout rootView, @NonNull EditText alertAmtInput,
      @NonNull Button cancelNewStock, @NonNull Button cancelSetAlert,
      @NonNull EditText categoryInput, @NonNull Button confirmNewStock,
      @NonNull Button confirmSetAlert, @NonNull TextView inStockTitle,
      @NonNull Button instockButton, @NonNull EditText itemsAlertInput,
      @NonNull EditText itemsInput, @NonNull LinearLayout newStockDialog,
      @NonNull EditText productIdAlertInput, @NonNull EditText productIdInput,
      @NonNull EditText productNameAlertInput, @NonNull EditText productNameInput,
      @NonNull Button setAlertButton, @NonNull LinearLayout setAlertDialog,
      @NonNull TextView stockAlertTitle) {
    this.rootView = rootView;
    this.alertAmtInput = alertAmtInput;
    this.cancelNewStock = cancelNewStock;
    this.cancelSetAlert = cancelSetAlert;
    this.categoryInput = categoryInput;
    this.confirmNewStock = confirmNewStock;
    this.confirmSetAlert = confirmSetAlert;
    this.inStockTitle = inStockTitle;
    this.instockButton = instockButton;
    this.itemsAlertInput = itemsAlertInput;
    this.itemsInput = itemsInput;
    this.newStockDialog = newStockDialog;
    this.productIdAlertInput = productIdAlertInput;
    this.productIdInput = productIdInput;
    this.productNameAlertInput = productNameAlertInput;
    this.productNameInput = productNameInput;
    this.setAlertButton = setAlertButton;
    this.setAlertDialog = setAlertDialog;
    this.stockAlertTitle = stockAlertTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInventoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInventoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_inventory, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInventoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alert_amt_input;
      EditText alertAmtInput = ViewBindings.findChildViewById(rootView, id);
      if (alertAmtInput == null) {
        break missingId;
      }

      id = R.id.cancel_new_stock;
      Button cancelNewStock = ViewBindings.findChildViewById(rootView, id);
      if (cancelNewStock == null) {
        break missingId;
      }

      id = R.id.cancel_set_alert;
      Button cancelSetAlert = ViewBindings.findChildViewById(rootView, id);
      if (cancelSetAlert == null) {
        break missingId;
      }

      id = R.id.category_input;
      EditText categoryInput = ViewBindings.findChildViewById(rootView, id);
      if (categoryInput == null) {
        break missingId;
      }

      id = R.id.confirm_new_stock;
      Button confirmNewStock = ViewBindings.findChildViewById(rootView, id);
      if (confirmNewStock == null) {
        break missingId;
      }

      id = R.id.confirm_set_alert;
      Button confirmSetAlert = ViewBindings.findChildViewById(rootView, id);
      if (confirmSetAlert == null) {
        break missingId;
      }

      id = R.id.in_stock_title;
      TextView inStockTitle = ViewBindings.findChildViewById(rootView, id);
      if (inStockTitle == null) {
        break missingId;
      }

      id = R.id.instock_button;
      Button instockButton = ViewBindings.findChildViewById(rootView, id);
      if (instockButton == null) {
        break missingId;
      }

      id = R.id.items_alert_input;
      EditText itemsAlertInput = ViewBindings.findChildViewById(rootView, id);
      if (itemsAlertInput == null) {
        break missingId;
      }

      id = R.id.items_input;
      EditText itemsInput = ViewBindings.findChildViewById(rootView, id);
      if (itemsInput == null) {
        break missingId;
      }

      id = R.id.new_stock_dialog;
      LinearLayout newStockDialog = ViewBindings.findChildViewById(rootView, id);
      if (newStockDialog == null) {
        break missingId;
      }

      id = R.id.product_id_alert_input;
      EditText productIdAlertInput = ViewBindings.findChildViewById(rootView, id);
      if (productIdAlertInput == null) {
        break missingId;
      }

      id = R.id.product_id_input;
      EditText productIdInput = ViewBindings.findChildViewById(rootView, id);
      if (productIdInput == null) {
        break missingId;
      }

      id = R.id.product_name_alert_input;
      EditText productNameAlertInput = ViewBindings.findChildViewById(rootView, id);
      if (productNameAlertInput == null) {
        break missingId;
      }

      id = R.id.product_name_input;
      EditText productNameInput = ViewBindings.findChildViewById(rootView, id);
      if (productNameInput == null) {
        break missingId;
      }

      id = R.id.set_alert_button;
      Button setAlertButton = ViewBindings.findChildViewById(rootView, id);
      if (setAlertButton == null) {
        break missingId;
      }

      id = R.id.set_alert_dialog;
      LinearLayout setAlertDialog = ViewBindings.findChildViewById(rootView, id);
      if (setAlertDialog == null) {
        break missingId;
      }

      id = R.id.stock_alert_title;
      TextView stockAlertTitle = ViewBindings.findChildViewById(rootView, id);
      if (stockAlertTitle == null) {
        break missingId;
      }

      return new FragmentInventoryBinding((LinearLayout) rootView, alertAmtInput, cancelNewStock,
          cancelSetAlert, categoryInput, confirmNewStock, confirmSetAlert, inStockTitle,
          instockButton, itemsAlertInput, itemsInput, newStockDialog, productIdAlertInput,
          productIdInput, productNameAlertInput, productNameInput, setAlertButton, setAlertDialog,
          stockAlertTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
